{"ast":null,"code":"import \"core-js/modules/web.timers.js\";\nimport Vue from \"vue\";\nimport Vuex from \"vuex\";\nVue.use(Vuex);\n\n// step01;\n// export default new Vuex.Store({\n//   state: {\n//     count: 0,\n//   },\n// });\n\n//step02\n// export default new Vuex.Store({\n//   state: {\n//     count: 0,\n//   },\n//   getters: {\n//     // 복잡한 계산식을 처리 : computed\n//     countMsg(state) {\n//       // return state.count + '번 호출됨';\n//       let msg = \"10번보다 \";\n//       if (state.count > 10) {\n//         msg += \"많이 \";\n//       } else {\n//         msg += \"적게 \";\n//       }\n//       return msg + \" 호출됨(\" + state.count + \")\";\n//     },\n//   },\n// });\n\n//step03\n// export default new Vuex.Store({\n//   state: {\n//     count: 0,\n//   },\n//   getters: {\n//     // 복잡한 계산식을 처리 : computed\n//     countMsg(state) {\n//       // return state.count + '번 호출됨';\n//       let msg = \"10번보다 \";\n//       if (state.count > 10) {\n//         msg += \"많이 \";\n//       } else {\n//         msg += \"적게 \";\n//       }\n//       return msg + \" 호출됨(\" + state.count + \")\";\n//     },\n//     msg1(state) {\n//       return \"msg1 : \" + state.count;\n//     },\n//     msg2(state) {\n//       return \"msg2 : \" + state.count;\n//     },\n//     msg3(state) {\n//       return \"msg3 : \" + state.count;\n//     },\n//   },\n// });\n\n//step04\n// export default new Vuex.Store({\n//   state: {\n//     count: 0,\n//   },\n//   mutations: {\n//     ADD_ONE(state) {\n//       state.count += 1;\n//     },\n//     ADD_COUNT(state, payload) {\n//       state.count += payload;\n//     },\n//     ADD_OBJ_COUNT(state, payload) {\n//       state.count += payload.num;\n//     },\n//   },\n//   getters: {\n//     // 복잡한 계산식을 처리 : computed\n//     countMsg(state) {\n//       // return state.count + '번 호출됨';\n//       let msg = \"10번보다 \";\n//       if (state.count > 10) {\n//         msg += \"많이 \";\n//       } else {\n//         msg += \"적게 \";\n//       }\n//       return msg + \" 호출됨(\" + state.count + \")\";\n//     },\n//   },\n// });\n\n//step05\n// export default new Vuex.Store({\n// state: {\n//   count: 0,\n// },\n// mutations: {\n//   ADD_ONE(state) {\n//     state.count += 1;\n//   },\n//   ADD_TEN_COUNT(state, payload) {\n//     state.count += payload;\n//   },\n//   ADD_OBJ_COUNT(state, payload) {\n//     state.count += payload.num;\n//   },\n//   },\n//   getters: {\n//     // 복잡한 계산식을 처리 : computed\n//     countMsg(state) {\n//       // return state.count + '번 호출됨';\n//       let msg = \"10번보다 \";\n//       if (state.count > 10) {\n//         msg += \"많이 \";\n//       } else {\n//         msg += \"적게 \";\n//       }\n//       return msg + \" 호출됨(\" + state.count + \")\";\n//     },\n//   },\n// });\n\n//step06\n// export default new Vuex.Store({\n//   state: {\n//     count: 0,\n//   },\n//   actions: {\n//     asyncAddOne(context) {\n//       setTimeout(() => {\n//         context.commit(\"ADD_ONE\");\n//       }, 2000);\n//     },\n//   },\n//   mutations: {\n//     ADD_ONE(state) {\n//       state.count += 1;\n//     },\n//     ADD_TEN_COUNT(state, payload) {\n//       state.count += payload;\n//     },\n//     ADD_OBJ_COUNT(state, payload) {\n//       state.count += payload.num;\n//     },\n//   },\n//   getters: {\n//     // 복잡한 계산식을 처리 : computed\n//     countMsg(state) {\n//       // return state.count + '번 호출됨';\n//       let msg = \"10번보다 \";\n//       if (state.count > 10) {\n//         msg += \"많이 \";\n//       } else {\n//         msg += \"적게 \";\n//       }\n//       return msg + \" 호출됨(\" + state.count + \")\";\n//     },\n//   },\n// });\n\n//step07\nexport default new Vuex.Store({\n  state: {\n    count: 0\n  },\n  actions: {\n    asyncAddOne: function asyncAddOne(context) {\n      setTimeout(function () {\n        context.commit(\"addOne\");\n      }, 2000);\n    }\n  },\n  mutations: {\n    ADD_ONE: function ADD_ONE(state) {\n      state.count += 1;\n    },\n    ADD_TEN_COUNT: function ADD_TEN_COUNT(state, payload) {\n      state.count += payload;\n    },\n    ADD_OBJ_COUNT: function ADD_OBJ_COUNT(state, payload) {\n      state.count += payload.num;\n    }\n  },\n  getters: {\n    // 복잡한 계산식을 처리 : computed\n    countMsg: function countMsg(state) {\n      // return state.count + '번 호출됨';\n      var msg = \"10번보다 \";\n      if (state.count > 10) {\n        msg += \"많이 \";\n      } else {\n        msg += \"적게 \";\n      }\n      return msg + \" 호출됨(\" + state.count + \")\";\n    }\n  }\n});","map":{"version":3,"names":["Vue","Vuex","use","Store","state","count","actions","asyncAddOne","context","setTimeout","commit","mutations","ADD_ONE","ADD_TEN_COUNT","payload","ADD_OBJ_COUNT","num","getters","countMsg","msg"],"sources":["C:/SSAFY/vue_code/SSAFY_Vue/배포파일/vuex-test_0515/src/store/index.js"],"sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\n\nVue.use(Vuex);\n\n// step01;\n// export default new Vuex.Store({\n//   state: {\n//     count: 0,\n//   },\n// });\n\n//step02\n// export default new Vuex.Store({\n//   state: {\n//     count: 0,\n//   },\n//   getters: {\n//     // 복잡한 계산식을 처리 : computed\n//     countMsg(state) {\n//       // return state.count + '번 호출됨';\n//       let msg = \"10번보다 \";\n//       if (state.count > 10) {\n//         msg += \"많이 \";\n//       } else {\n//         msg += \"적게 \";\n//       }\n//       return msg + \" 호출됨(\" + state.count + \")\";\n//     },\n//   },\n// });\n\n//step03\n// export default new Vuex.Store({\n//   state: {\n//     count: 0,\n//   },\n//   getters: {\n//     // 복잡한 계산식을 처리 : computed\n//     countMsg(state) {\n//       // return state.count + '번 호출됨';\n//       let msg = \"10번보다 \";\n//       if (state.count > 10) {\n//         msg += \"많이 \";\n//       } else {\n//         msg += \"적게 \";\n//       }\n//       return msg + \" 호출됨(\" + state.count + \")\";\n//     },\n//     msg1(state) {\n//       return \"msg1 : \" + state.count;\n//     },\n//     msg2(state) {\n//       return \"msg2 : \" + state.count;\n//     },\n//     msg3(state) {\n//       return \"msg3 : \" + state.count;\n//     },\n//   },\n// });\n\n//step04\n// export default new Vuex.Store({\n//   state: {\n//     count: 0,\n//   },\n//   mutations: {\n//     ADD_ONE(state) {\n//       state.count += 1;\n//     },\n//     ADD_COUNT(state, payload) {\n//       state.count += payload;\n//     },\n//     ADD_OBJ_COUNT(state, payload) {\n//       state.count += payload.num;\n//     },\n//   },\n//   getters: {\n//     // 복잡한 계산식을 처리 : computed\n//     countMsg(state) {\n//       // return state.count + '번 호출됨';\n//       let msg = \"10번보다 \";\n//       if (state.count > 10) {\n//         msg += \"많이 \";\n//       } else {\n//         msg += \"적게 \";\n//       }\n//       return msg + \" 호출됨(\" + state.count + \")\";\n//     },\n//   },\n// });\n\n//step05\n// export default new Vuex.Store({\n// state: {\n//   count: 0,\n// },\n// mutations: {\n//   ADD_ONE(state) {\n//     state.count += 1;\n//   },\n//   ADD_TEN_COUNT(state, payload) {\n//     state.count += payload;\n//   },\n//   ADD_OBJ_COUNT(state, payload) {\n//     state.count += payload.num;\n//   },\n//   },\n//   getters: {\n//     // 복잡한 계산식을 처리 : computed\n//     countMsg(state) {\n//       // return state.count + '번 호출됨';\n//       let msg = \"10번보다 \";\n//       if (state.count > 10) {\n//         msg += \"많이 \";\n//       } else {\n//         msg += \"적게 \";\n//       }\n//       return msg + \" 호출됨(\" + state.count + \")\";\n//     },\n//   },\n// });\n\n//step06\n// export default new Vuex.Store({\n//   state: {\n//     count: 0,\n//   },\n//   actions: {\n//     asyncAddOne(context) {\n//       setTimeout(() => {\n//         context.commit(\"ADD_ONE\");\n//       }, 2000);\n//     },\n//   },\n//   mutations: {\n//     ADD_ONE(state) {\n//       state.count += 1;\n//     },\n//     ADD_TEN_COUNT(state, payload) {\n//       state.count += payload;\n//     },\n//     ADD_OBJ_COUNT(state, payload) {\n//       state.count += payload.num;\n//     },\n//   },\n//   getters: {\n//     // 복잡한 계산식을 처리 : computed\n//     countMsg(state) {\n//       // return state.count + '번 호출됨';\n//       let msg = \"10번보다 \";\n//       if (state.count > 10) {\n//         msg += \"많이 \";\n//       } else {\n//         msg += \"적게 \";\n//       }\n//       return msg + \" 호출됨(\" + state.count + \")\";\n//     },\n//   },\n// });\n\n//step07\nexport default new Vuex.Store({\n  state: {\n    count: 0,\n  },\n  actions: {\n    asyncAddOne(context) {\n      setTimeout(() => {\n        context.commit(\"addOne\");\n      }, 2000);\n    },\n  },\n  mutations: {\n    ADD_ONE(state) {\n      state.count += 1;\n    },\n    ADD_TEN_COUNT(state, payload) {\n      state.count += payload;\n    },\n    ADD_OBJ_COUNT(state, payload) {\n      state.count += payload.num;\n    },\n  },\n  getters: {\n    // 복잡한 계산식을 처리 : computed\n    countMsg(state) {\n      // return state.count + '번 호출됨';\n      let msg = \"10번보다 \";\n      if (state.count > 10) {\n        msg += \"많이 \";\n      } else {\n        msg += \"적게 \";\n      }\n      return msg + \" 호출됨(\" + state.count + \")\";\n    },\n  },\n});\n"],"mappings":";AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AAEvBD,GAAG,CAACE,GAAG,CAACD,IAAI,CAAC;;AAEbeAAe,IAAIA,IAAI,CAACE,KAAK,CAAC;EAC5BC,KAAK,EAAE;IACLC,KAAK,EAAE;EACT,CAAC;EACDC,OAAO,EAAE;IACPC,WAAW,WAAAA,YAACC,OAAO,EAAE;MACnBC,UAAU,CAAC,YAAM;QACfD,OAAO,CAACE,MAAM,CAAC,QAAQ,CAAC;MAC1B,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC;EACDC,SAAS,EAAE;IACTC,OAAO,WAAAA,QAACR,KAAK,EAAE;MACbA,KAAK,CAACC,KAAK,IAAI,CAAC;IAClB,CAAC;IACDQ,aAAa,WAAAA,cAACT,KAAK,EAAEU,OAAO,EAAE;MAC5BV,KAAK,CAACC,KAAK,IAAIS,OAAO;IACxB,CAAC;IACDC,aAAa,WAAAA,cAACX,KAAK,EAAEU,OAAO,EAAE;MAC5BV,KAAK,CAACC,KAAK,IAAIS,OAAO,CAACE,GAAG;IAC5B;EACF,CAAC;EACDC,OAAO,EAAE;IACP;IACAC,QAAQ,WAAAA,SAACd,KAAK,EAAE;MACd;MACA,IAAIe,GAAG,GAAG,QAAQ;MAClB,IAAIf,KAAK,CAACC,KAAK,GAAG,EAAE,EAAE;QACpBc,GAAG,IAAI,KAAK;MACd,CAAC,MAAM;QACLA,GAAG,IAAI,KAAK;MACd;MACA,OAAOA,GAAG,GAAG,OAAO,GAAGf,KAAK,CAACC,KAAK,GAAG,GAAG;IAC1C;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}